1. eqeq 줄이기 => 동등연산자(==)
=> 엄격한 동등 연산자 Strict Equality(===) 쓰기
=> 동등 연산자는 형 변환이 일어남(type casting) ex) '1' == 1  => true
=> 그래서 엄격한 동등 연산자를 활용 해야함 

2. 형변환 주의
=> 사용자는 명시적인 변환을 해주어야지 JS가 암묵적인 변환을 해도 당황하지 않음
=> ex) parseInt('9.999', 10) (10 진수라고 명시적으로 써줘야 함)

3. isNaN
=> JS에서 숫자를 다루는 방법이 어려움
=> 숫자 검사 방법이 Number.MAX_SAFE_INTEGER, Number.isInteger 등이 있음
=> isNaN은 JS에서 숫자에 대해서 판별하기가 어려우므로 준 숫자 판별 방법
=> isNaN은 반대로 나오기 때문에 (느슨한 검사) Number.isNaN으로 하면 엄격한 검사이므로 바로 나옴
